<?xml version="1.0" ?>
<argos-configuration>

  <!-- ************************* -->
  <!-- * General configuration * -->
  <!-- ************************* -->
  <framework>
    <system threads="0" />
    <experiment length="0"
                ticks_per_second="10"
                random_seed="124" />
  </framework>

  <!-- *************** -->
  <!-- * Controllers * -->
  <!-- *************** -->
  <controllers>

    <footbot_lamb_controller id="lamb_controller"
                                  library="build/controllers/footbot_lamb_range_and_bearing/libfootbot_lamb_range_and_bearing.so">
      <actuators>
          <!-- <radios implementation="default" /> -->
            <range_and_bearing implementation="default" />
            <differential_steering implementation="default" />
      </actuators>
      <sensors>
            <!-- <radios implementation="default" medium="radios" /> -->
            <range_and_bearing implementation="medium" medium="rab" />
            <footbot_proximity implementation="default" show_rays="true" />
            <positioning implementation="default" />
      </sensors>
      <params alpha="7.5" delta="0.1" velocity="5" />
  </footbot_lamb_controller>

  </controllers>

  <!-- *********************** -->
  <!-- * Arena configuration * -->
  <!-- *********************** -->
  <arena size="30, 30, 1" center="0,0,0.5">

    <box id="wall_north" size="24,0.1,0.5" movable="false">
      <body position="0,12,0" orientation="0,0,0" />
    </box>
    <box id="wall_south" size="24,0.1,0.5" movable="false">
      <body position="0,-12,0" orientation="0,0,0" />
    </box>
    <box id="wall_east" size="0.1,24,0.5" movable="false">
      <body position="12,0,0" orientation="0,0,0" />
    </box>
    <box id="wall_west" size="0.1,24,0.5" movable="false">
      <body position="-12,0,0" orientation="0,0,0" />
    </box>

    <!--
        You can distribute entities randomly. Here, we distribute
        10 foot-bots in this way:
        - the position is uniformly distributed
        on the ground, in the square whose corners are (-2,-2) and (2,2)
        - the orientations are non-zero only when rotating around Z and chosen
        from a gaussian distribution, whose mean is zero degrees and
        standard deviation is 360 degrees.
    -->
    <foot-bot id="lamb_0">
        <body position="0,0,0" orientation="0,0,0" />
        <controller config="lamb_controller"/>
    </foot-bot>
    <foot-bot id="lamb_1">
        <body position="0.5,0,0" orientation="0,0,0" />
        <controller config="lamb_controller"/>
    </foot-bot>
    <!-- <distribute>
      <position method="uniform" min="-12,-12,0" max="12,12,0" />
      <orientation method="gaussian" mean="0,0,0" std_dev="360,0,0" />
      <entity quantity="100" max_trials="500">
        <foot-bot id="fb">
          <controller config="fdc" />
        </foot-bot>
      </entity>
    </distribute> -->

    <!--
        We distribute 5 boxes uniformly in position and rotation around Z.
    -->
    <distribute>
      <position method="uniform" min="-12,-12,0" max="12,12,0" />
      <orientation method="uniform" min="0,0,0" max="360,0,0" />
      <entity quantity="50" max_trials="200">
        <box id="b" size="0.3,0.3,0.5" movable="false" />
      </entity>
    </distribute>

    <!--
        We distribute cylinders uniformly in position and with
        constant rotation (rotating a cylinder around Z does not
        matter)
    -->
    <distribute>
      <position method="uniform" min="-12,-12,0" max="12,12,0" />
      <orientation method="constant" values="0,0,0" />
      <entity quantity="50" max_trials="200">
        <cylinder id="c" height="0.5" radius="0.15" movable="false" />
      </entity>
    </distribute>

  </arena>

  <!-- ******************* -->
  <!-- * Physics engines * -->
  <!-- ******************* -->
  <physics_engines>
    <dynamics2d id="dyn2d" />
  </physics_engines>

  <!-- ********* -->
  <!-- * Media * -->
  <!-- ********* -->
  <media>
      <!-- <radio id="radios" /> -->
      <range_and_bearing id="rab" />

  </media>

  <!-- ****************** -->
  <!-- * Visualization * -->
  <!-- ****************** -->
  <visualization>
    <!--
        This shows how to add customized drawing in the world
        using the qt user functions.
        Check 'argos3 -q qt-opengl' for more help.
    -->
    <qt-opengl>
      <user_functions library="build/loop_functions/id_loop_functions/libid_loop_functions"
                      label="id_qtuser_functions" />
    </qt-opengl>
  </visualization>

</argos-configuration>
